name: test

on:
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build-cache-key: ${{ steps.build-cache.outputs.cache-key }}
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4

      - name: Setup build cache
        id: build-cache
        run: |
          echo "cache-key=build-${{ github.sha }}-${{ runner.os }}-${{ github.run_id }}" >> $GITHUB_OUTPUT

      - name: Cache build dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps/3rd/usr/local
            build_release
          key: ${{ steps.build-cache.outputs.cache-key }}
          restore-keys: |
            build-${{ github.sha }}-${{ runner.os }}-
            build-${{ github.sha }}-
            build-

      - name: Install dependencies
        shell: bash
        run: |
          sudo bash build.sh init

      - name: Build miniob
        shell: bash
        run: |
          bash build.sh release -DCONCURRENCY=ON -DWITH_UNIT_TESTS=OFF -DWITH_BENCHMARK=ON -DWITH_MEMTRACER=ON

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build_release/
            deps/3rd/usr/local/
          retention-days: 1

  basic-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./

      - name: run basic test
        shell: bash
        run: |
          echo "begin test..."
          python3 test/case/miniob_test.py --test-cases=basic | tail -1 | grep "basic is success"

  # I found that sysbench would send more request before receiving last response
  sysbench-test:
    needs: build
    strategy:
      matrix:
        thread_model: ['one-thread-per-connection', 'java-thread-pool']
        test_case: ['miniob_insert', 'miniob_delete', 'miniob_select']

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./

      - name: install sysbench and mariadb-client
        shell: bash
        run: |
          curl -s https://packagecloud.io/install/repositories/akopytov/sysbench/script.deb.sh -o script.deb.sh
          sudo bash script.deb.sh
          sudo apt -y install sysbench mariadb-client

      - name: start server
        shell: bash
        run: |
          nohup ./build_release/bin/observer -T ${{ matrix.thread_model }} -s /tmp/miniob.sock -f etc/observer.ini -P mysql -t mvcc -d disk 2>&1 &
          sleep 10 && echo "wake up"
          mysql --version
          mysql -S /tmp/miniob.sock -e "show tables"

      # error number 41 is LOCKED_CONCURRENCY_CONFLICT
      # we should change the error number if we update the code
      - name: sysbench test
        shell: bash
        run: |
          cd test/sysbench
          sysbench --mysql-socket=/tmp/miniob.sock --mysql-ignore-errors=41 --threads=10 ${{ matrix.test_case }} prepare
          sysbench --mysql-socket=/tmp/miniob.sock --mysql-ignore-errors=41 --threads=10 ${{ matrix.test_case }} run || { cat ../../nohup.txt*; exit 1; }

      - name: stop server
        shell: bash
        run: |
          mysql -S /tmp/miniob.sock -e "create table t(id int)"
          mysql -S /tmp/miniob.sock -e "show tables"
          killall observer

      - name: restart server
        shell: bash
        run: |
          nohup ./build_release/bin/observer -T ${{ matrix.thread_model }} -s /tmp/miniob.sock -f etc/observer.ini -P mysql -t mvcc -d disk 2>&1 &
          sleep 10 && echo "wake up"
          mysql -S /tmp/miniob.sock -e "show tables"

      - name: sysbench test again
        shell: bash
        run: |
          cd test/sysbench
          sysbench --mysql-socket=/tmp/miniob.sock --mysql-ignore-errors=41 --threads=10 ${{ matrix.test_case }} run || { cat ../../nohup.txt*; exit 1; }

  benchmark-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./

      - name: concurrency-test
        shell: bash
        run: |
          cd build_release/bin/
          for file in `find ./ -name "*_concurrency_test" -executable`; do $file; if [ $? -ne 0 ]; then exit 1; fi; done
  memtracer-test:
    needs: build
    strategy:
      matrix:
        memtracer: ['LD_PRELOAD=./lib/libmemtracer.so', '']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./

      - name: memtracer-performance-test
        shell: bash
        run: |
          cd build_release
          ${{matrix.memtracer}} ./benchmark/memtracer_performance_test
      - name: memtracer-unittest
        shell: bash
        run: |
          cd build_release
          LD_PRELOAD=./lib/libmemtracer.so ./unittest/memtracer_test
      - name: memtracer-sysbench
        shell: bash
        run: |
          curl -s https://packagecloud.io/install/repositories/akopytov/sysbench/script.deb.sh -o script.deb.sh
          sudo bash script.deb.sh
          sudo apt -y install sysbench mariadb-client
          nohup sh -c '${{matrix.memtracer}} ./build_release/bin/observer -T one-thread-per-connection -s /tmp/miniob.sock -f etc/observer.ini -P mysql -t mvcc -d disk' &
          sleep 10 && echo "wake up"
          mysql --version
          mysql -S /tmp/miniob.sock -e "show tables"
          cd test/sysbench
          sysbench --mysql-socket=/tmp/miniob.sock --mysql-ignore-errors=41 --threads=10 miniob_insert prepare
          sysbench --mysql-socket=/tmp/miniob.sock --mysql-ignore-errors=41 --threads=10 miniob_insert run
          killall observer
          cd ../..
          nohup ./build_release/bin/observer -T one-thread-per-connection -s /tmp/miniob.sock -f etc/observer.ini -P mysql -t mvcc -d disk &
          sleep 10 && echo "wake up"
          mysql -S /tmp/miniob.sock -e "show tables"
  integration-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./
      
      - name: init mysql
        uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: "8.0"
      - name: init
        shell: bash
        run: |
          sudo apt -y install pip python3-pymysql python3-psutil

      - name: integration test
        shell: bash
        run: |
          cd test/integration_test/
          bash ./miniob_test_docker_entry.sh
          python3 ./libminiob_test.py -c conf.ini

